<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//PT-BR"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="br.com.usjt.web.service.RecomendacaoMapper">
	<resultMap id="restaurante" type="br.com.usjt.web.model.Restaurante">
		<id property="cnpj" column="cnpj" />
		<result property="avaliacao" column="avaliacao" />
		<result property="qtdMesas" column="qtd_mesas" />
		<result property="codigoComanda" column="codigo_cardapio" />
		<result property="nomeFantasia" column="nom_fantasia" />
		<result property="razaoSocial" column="razao_social" />
		<result property="status" column="status" />
		<result property="descricao" column="descricao" />
		<result property="logo" column="logotipo" />
		<association property="endereco" javaType="br.com.usjt.web.model.Endereco">
			<id property="id" column="id" />
			<result property="logradouro" column="logradouro" />
			<result property="numero" column="numero" />
			<result property="complemento" column="complemento" />
			<result property="bairro" column="bairro" />
			<result property="cidade" column="cidade" />
			<result property="uf" column="uf" />
			<result property="cep" column="cep" />
		</association>
	</resultMap>

	<select id="getRecomendacaoDiaSemana" resultMap="restaurante">
		SELECT r.cnpj, r.qtd_mesas, r.codigo_cardapio, r.razao_social, r.logotipo, r.nom_fantasia, r.status,r.descricao, r.id_endereco,
	   		   e.id, e.logradouro, e.numero, e.complemento, e.bairro, e.cidade, e.uf, e.cep, avg(a.av_estabelecimento) as avaliacao
		FROM restaurante r
			INNER JOIN endereco e ON r.id_endereco = e.id
			INNER JOIN funcionario_restaurante fr ON r.cnpj = fr.cnpj_restaurante
			INNER JOIN usuario u ON u.id = fr.id_funcionario
			INNER JOIN comanda c ON c.id_garcom = u.id
			INNER JOIN avaliacao a ON a.id_comanda = c.id
            
			WHERE  DAYOFWEEK(sysdate()) = DAYOFWEEK(c.dta_entrada)
			AND r.status = 'A'
			AND c.dta_entrada between (DATE_SUB(sysdate(), INTERVAL 3 MONTH)) and (sysdate()+1)
			GROUP BY r.cnpj
				ORDER BY avg(a.av_estabelecimento) DESC
                LIMIT 8
	</select>
	
	<select id="getRecomendacaoMaisVisitados" resultMap="restaurante">
		select x.* from (
			SELECT 
				r.cnpj,	r.qtd_mesas, r.codigo_cardapio, r.razao_social, r.logotipo, r.nom_fantasia, r.status,r.descricao, r.id_endereco,
				e.id, e.logradouro, e.numero, e.complemento, e.bairro, e.cidade, e.uf, e.cep, count(1) as line, avg(a.av_estabelecimento) as avaliacao
			FROM restaurante r
			INNER JOIN endereco e ON r.id_endereco = e.id
			LEFT JOIN funcionario_restaurante fr ON r.cnpj = fr.cnpj_restaurante
			LEFT JOIN usuario u ON u.id = fr.id_funcionario
			INNER JOIN comanda c ON c.id_garcom = u.id
			LEFT JOIN avaliacao a ON a.id_comanda = c.id
			WHERE
				c.dta_entrada between (DATE_SUB(sysdate(), INTERVAL 3 MONTH)) and (sysdate()+1)
			group by
				r.cnpj,	r.qtd_mesas, r.codigo_cardapio, r.razao_social, r.logotipo, r.nom_fantasia, r.status,r.descricao, r.id_endereco,
				e.id, e.logradouro, e.numero, e.complemento, e.bairro, e.cidade, e.uf, e.cep) x
		order by line desc
   		limit 0,8
	</select>
	
	<select id="getRecomendacaoVisitadoRecentemente" resultMap="restaurante">
		SELECT 
			distinct r.cnpj,	r.qtd_mesas, r.codigo_cardapio, r.razao_social, r.logotipo, r.nom_fantasia, r.status,r.descricao, r.id_endereco,
			e.id, e.logradouro, e.numero, e.complemento, e.bairro, e.cidade, e.uf, e.cep, avg(a.av_estabelecimento) as avaliacao
		FROM usuario u
		INNER JOIN usuario_comanda com_user ON com_user.cod_usuario = u.id
		INNER JOIN comanda c on c.id = com_user.cod_comanda
		LEFT JOIN avaliacao a ON a.id_comanda = c.id
           
        INNER JOIN funcionario_restaurante fr ON fr.id_funcionario = c.id_garcom
        INNER JOIN restaurante r on r.cnpj = fr. cnpj_restaurante
		INNER JOIN endereco e ON r.id_endereco = e.id
           where
				u.id = #{idUsuario}
            and c.dta_entrada between (DATE_SUB(sysdate(), INTERVAL 3 MONTH)) and (sysdate()+1)
        group by r.cnpj
        limit 0,8
	</select>
	
	<select id="getRecomendacaoEspecialidadeUsuario" resultMap="restaurante">
		SELECT r.cnpj, r.qtd_mesas, r.codigo_cardapio, r.razao_social, r.logotipo, r.nom_fantasia, r.status,r.descricao, r.id_endereco,
		   		   e.id, e.logradouro, e.numero, e.complemento, e.bairro, e.cidade, e.uf, e.cep, avg(a.av_estabelecimento) as avaliacao
			FROM restaurante r
				INNER JOIN endereco e ON r.id_endereco = e.id
				INNER JOIN especialidade_restaurante esp_res ON esp_res.cnpj_restaurante = r.cnpj
				INNER JOIN especialidade esp ON esp.id = esp_res.id_especialidade
				LEFT JOIN funcionario_restaurante fr ON r.cnpj = fr.cnpj_restaurante
				LEFT JOIN usuario u ON u.id = fr.id_funcionario
				left JOIN comanda c ON c.id_garcom = u.id
				LEFT JOIN avaliacao a ON a.id_comanda = c.id
				WHERE esp.id in
					(
						select id_especialidade from especialidade_item esp_it
							inner join item it on it.id = esp_it.id_especialidade
							inner join pedido ped on ped.id_item = it.id
							inner join usuario_pedido usu_ped on usu_ped.id_pedido = ped.id and usu_ped.id_comanda = ped.id_comanda
						  WHERE usu_ped.id_usuario = #{idUsuario}
								and ped.data between (DATE_SUB(sysdate(), INTERVAL 3 MONTH)) and (sysdate()+1)
							GROUP BY esp_it.id_especialidade
							ORDER BY COUNT(id_especialidade) DESC
					)
			group by r.cnpj		
			limit 8
	</select>
	
	<select id="getScoreByEspecialidadeUsuario" resultType="br.com.usjt.web.model.Item">
	SELECT esp.nome as especialidade, count(esp.nome) as score
	FROM restaurante r
	INNER JOIN endereco e ON r.id_endereco = e.id
	INNER JOIN especialidade_restaurante esp_res ON esp_res.cnpj_restaurante =
	r.cnpj
	INNER JOIN especialidade esp ON esp.id = esp_res.id_especialidade
	WHERE esp.id in
	(
	select id_especialidade from especialidade_item esp_it
	inner join item it on it.id = esp_it.id_especialidade
	inner join pedido ped on ped.id_item = it.id
	inner join usuario_pedido usu_ped on usu_ped.id_pedido = ped.id and
	usu_ped.id_comanda = ped.id_comanda
	WHERE usu_ped.id_usuario = #{idUsuario}
	and ped.data between (DATE_SUB(sysdate(), INTERVAL 3 MONTH)) and
	(sysdate()+1)
	GROUP BY esp_it.id_especialidade
	ORDER BY COUNT(id_especialidade) DESC
	)
	group by esp.nome
	</select>
	
	<select id="getRecomendacaoRestauranteAvaliado" resultMap="restaurante">
		select distinct 
			x.cnpj,	x.qtd_mesas, x.codigo_cardapio, x.razao_social, x.logotipo, x.nom_fantasia, x.status,x.descricao, x.id_endereco,
					x.id, x.logradouro, x.numero, x.complemento, x.bairro, x.cidade, x.uf, x.cep, x.avaliacao
			from (
						select 
							r.cnpj,	r.qtd_mesas, r.codigo_cardapio, r.razao_social, r.logotipo, r.nom_fantasia, r.status,r.descricao, r.id_endereco,
								e.id, e.logradouro, e.numero, e.complemento, e.bairro, e.cidade, e.uf, e.cep, 
								(select avg(av_est.av_estabelecimento)
									from avaliacao av_est where av_est.id_comanda in 
										(select c.id from comanda c
										    INNER JOIN funcionario_restaurante fr ON fr.id_funcionario = c.id_garcom
										    INNER JOIN restaurante re on re.cnpj = fr. cnpj_restaurante
										    WHERE
										    	re.cnpj = r.cnpj)) avaliacao
	        from usuario u
	        inner join usuario_pedido usu_ped on usu_ped.id_usuario = u.id
	        inner join avaliacao av on av.id_cliente = u.id
	        inner join comanda c on c.id = av.id_comanda
	        INNER JOIN funcionario_restaurante fr ON fr.id_funcionario = c.id_garcom
	        INNER JOIN restaurante r on r.cnpj = fr. cnpj_restaurante
			INNER JOIN endereco e ON r.id_endereco = e.id
            where
				c.dta_entrada between (DATE_SUB(sysdate(), INTERVAL 3 MONTH)) and (sysdate()+1)
	        group by r.cnpj, r.qtd_mesas, r.codigo_cardapio, r.razao_social, r.logotipo, r.nom_fantasia, r.status,r.descricao, r.id_endereco,
					e.id, e.logradouro, e.numero, e.complemento, e.bairro, e.cidade, e.uf, e.cep, av.av_estabelecimento, av.av_estabelecimento
			order by avaliacao desc) x
		limit 8
	</select>
	
	<select id="getRestaurantesByCnpjs" resultMap="restaurante">
		SELECT 
			r.cnpj,
			r.qtd_mesas,
			r.codigo_cardapio,
			r.razao_social,
			r.logotipo,
			r.nom_fantasia,
			r.status,
			r.descricao,
			r.id_endereco,
	        e.id,
	        e.logradouro,
	        e.numero,
	        e.complemento,
	        e.bairro,
	        e.cidade,
	        e.uf,
	        e.cep,
	        avg(a.av_estabelecimento) as avaliacao
	        from restaurante r
		LEFT JOIN funcionario_restaurante fr ON r.cnpj = fr.cnpj_restaurante
		LEFT JOIN usuario u ON u.id = fr.id_funcionario
				left JOIN comanda c ON c.id_garcom = u.id
				LEFT JOIN avaliacao a ON a.id_comanda = c.id
			inner join endereco e
			  on r.id_endereco = e.id
			 
		where
		
			r.cnpj in 
			(
				<foreach item="cnpj" collection="cnpjs" separator=",">
					#{cnpj}
				</foreach>
			)
		group by r.cnpj
	</select>
</mapper>
